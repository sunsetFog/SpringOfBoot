# 树形结构，可读性更强，更强约束性
server:
  port: 8060
  servlet:
    # 虚拟路径
    context-path: /sky
  max-http-header-size: 102400

spring:
  # 上传文件大小
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB
  # 关闭模板引擎缓存
  thymeleaf:
    cache: false
  mvc:
    favicon:
      enabled: false
    # 设置日期格式  yyyy-MM-dd HH:mm:ss
    format:
      date: yyyy-MM-dd
  # 激活**环境
  profiles:
    active: dev
  # 连接数据库
  datasource:
    username: root
    password: root123456
    url: jdbc:mysql://localhost:3306/db_news?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 切换数据源
    type: com.alibaba.druid.pool.DruidDataSource
    # 数据源专有配置
    druid:
      # 配置初始化大小、最小、最大线程数
      initialSize: 5
      minIdle: 5
      # CPU核数+1，也可以大些但不要超过20，数据库加锁时连接过多性能下降
      maxActive: 20
      # 最大等待时间，内网：800，外网：1200（三次握手1s）
      maxWait: 60000
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最大空间时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      # 设置从连接池获取连接时是否检查连接有效性，true检查，false不检查
      testOnBorrow: true
      # 设置从连接池归还连接时是否检查连接有效性，true检查，false不检查
      testOnReturn: true
      # 可以支持PSCache（提升写入、查询效率）
      poolPreparedStatements: true
      # 配置控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      # 状态监控
      filter:
        stat:
          enabled: true
          db-type: mysql
          log-slow-sql: true
          slow-sql-millis: 2000
        # 监控过滤器
      web-stat-filter:
        enabled: true
        exclusions:
          - "*.js"
          - "*.gif"
          - "*.jpg"
          - "*.png"
          - "*.css"
          - "*.ico"
          - "/druid/*"
      # 保持长连接
      keepAlive: true
      maxPoolPreparedStatementPerConnectionSize: 20
      useGlobalDataSourceStat: true
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500

  # 消息编码、国际多语言
  messages:
    basename: il8n.login
    encoding: UTF-8
  # http编码
  http:
    encoding:
      charset: UTF-8
  # 文件编码
  banner:
    charse: UTF-8
  # 配置redis
  redis:
    host: 127.0.0.1
    port: 6379
  # 邮件任务   密码：我的qq邮箱--设置--账户--开启POP3
  mail:
    username: 1456300078@qq.com
    password: winccvcvjmrhhdda
    host: smtp.qq.com
    # 开启加密验证
    properties:
      mail:
        smtl:
          ssl:
            enable: true

# 公共文件路径 --- 使用
# @Value("${file.uploadFolder}") // 读取配置文件信息
# private String uploadFolder;
file:
  uploadFolder: /img/avatorImages/
# pagehelper 分页使用
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql




# 整合mybatis
mybatis:
  type-aliases-package: com.core.pojo
  mapper-locations: classpath:mybatis_mapper/*.xml

# 日志级别
logging:
  level:
    com:
      core: trace
  # 日志归档
  file:
    path: D:\mysql-5.7.19-winx64\data\journal



# 文件2
---

server:
  port: 8062
spring:
  profiles: dev

---
blossom2:
  userName: "小桃"
  egg: 18
  # 属性占位符
  age: ${blossom.egg}
  birthday: 2020/01/01
#  hobbies:
#    - 唱歌
#    - 跳舞
  # 行内写法
  hobbies: [唱歌,跳舞]
#  girlFriend:
#    18: 小华
#    20: 迪丽热巴
  # 行内写法
  girlFriend: {18: 小华, 20: 迪丽热巴}
  address:
    # 随机值
    id: ${random.int(3)}
    desc: 北京


  